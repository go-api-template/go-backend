# Use Task to define tasks and run them locally or in CI
# For more information about Task, see https://taskfile.dev/#/usage?id=usage
version: '3'

tasks:
    pull:
        desc: "Pull the docker images"
        cmds:
            - |
                PROJECT_NAME={{.PROJECT_NAME}}
                if [ -f docker-compose.{{.SHORT_ENV_NAME}}.yml ]; then
                  docker compose -f docker-compose.yml -f docker-compose.{{.SHORT_ENV_NAME}}.yml --project-name {{.PROJECT_NAME}} pull
                else
                  docker compose -f docker-compose.yml --project-name {{.PROJECT_NAME}} pull
                fi
        silent: true

    build:
        desc: "Build the docker services"
        cmds:
            - echo "{{.PROJECT_NAME}} ({{.VERSION}}) will be running in '{{.APP_ENV}}' mode."
            - |
                PROJECT_NAME={{.PROJECT_NAME}}
                if [ -f docker-compose.{{.SHORT_ENV_NAME}}.yml ]; then
                  docker compose -f docker-compose.yml -f docker-compose.{{.SHORT_ENV_NAME}}.yml --project-name {{.PROJECT_NAME}} build
                else
                  docker compose -f docker-compose.yml --project-name {{.PROJECT_NAME}} build
                fi
        silent: true

    up:
        desc: "Start the docker services"
        cmds:
            - echo "{{.PROJECT_NAME}} ({{.VERSION}}) will be running in '{{.APP_ENV}}' mode."
            - |
                PROJECT_NAME={{.PROJECT_NAME}}
                if [ -f docker-compose.{{.SHORT_ENV_NAME}}.yml ]; then
                  docker compose -f docker-compose.yml -f docker-compose.{{.SHORT_ENV_NAME}}.yml --project-name {{.PROJECT_NAME}} up -d
                else
                  docker compose -f docker-compose.yml --project-name {{.PROJECT_NAME}} up -d
                fi
            - echo "Api server http://localhost:{{.APP_PORT}}"
            - echo "PgAdmin http://localhost:{{.PGADMIN_HTTP_PORT}}"
            - echo "Mailhog http://localhost:{{.MAILHOG_HTTP_PORT}}"
            - echo "Redis Stack http://localhost:{{.REDIS_HTTP_PORT}}"
        silent: true

    down:
        desc: "Stop the docker services"
        cmds:
            - |
                PROJECT_NAME={{.PROJECT_NAME}}
                if [ -f docker-compose.{{.SHORT_ENV_NAME}}.yml ]; then
                  docker compose -f docker-compose.yml -f docker-compose.{{.SHORT_ENV_NAME}}.yml --project-name {{.PROJECT_NAME}} down
                else
                  docker compose -f docker-compose.yml --project-name {{.PROJECT_NAME}} down
                fi
        silent: true

    clean:
        desc: "Clean the docker services"
        cmds:
            - |
                PROJECT_NAME={{.PROJECT_NAME}}
                if [ -f docker-compose.{{.SHORT_ENV_NAME}}.yml ]; then
                  docker compose -f docker-compose.yml -f docker-compose.{{.SHORT_ENV_NAME}}.yml --project-name {{.PROJECT_NAME}} down -v --remove-orphans
                else
                  docker compose -f docker-compose.yml --project-name {{.PROJECT_NAME}} down -v --remove-orphans
                fi
        silent: true
