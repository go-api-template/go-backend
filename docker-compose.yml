services:

    # Postgres database
    database:
        container_name: ${APP_NAME}-database
        hostname: ${APP_NAME}-database
        image: postgres:16
        restart: always
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: POSTGRES_PASSWORD{DB_PASSWORD}
            POSTGRES_DB: ${POSTGRES_NAME}
            POSTGRES_CHARSET: ${POSTGRES_CHARSET}
            TZ: ${APP_TIMEZONE}
            PGTZ: ${APP_TIMEZONE}
        ports:
            - "${POSTGRES_PORT}:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - database_network
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_NAME}" ]
            interval: 10s
            timeout: 5s
            retries: 5

    # Redis cache database
    redis:
        container_name: ${APP_NAME}-redis
        hostname: ${APP_NAME}-redis
        image: redis/redis-stack-server
        ports:
            - "${REDIS_PORT}:6379"
        volumes:
            - redis_data:/data
        networks:
            - redis_network


# Declare volumes to mount
volumes:
    postgres_data: { }
    redis_data: { }

# Declare networks to attach
networks:
    default:
        name: ${APP_NAME}_default
    database_network:
        name: ${APP_NAME}-database-network
        driver: bridge
    redis_network:
        name: ${APP_NAME}-redis-network
        driver: bridge
