# Use Task to define tasks and run them locally or in CI
# For more information about Task, see https://taskfile.dev/#/usage?id=usage
version: '3'

# Import environment variables from app.env
dotenv: ['app.env']

# Define variables to use in tasks
vars:
    SHORT_ENV_NAME:
        desc: "The first three characters of the APP_ENV variable, production becomes pro and development becomes dev."
        sh: echo '{{.APP_ENV}}' | cut -c1-3
    PROJECT_NAME:
        desc: "The name of the project. If the APP_ENV is production, the PROJECT_NAME is the same as the APP_NAME. If the APP_ENV is development, the PROJECT_NAME is the APP_NAME with the SHORT_ENV_NAME appended to the end."
        sh: echo '{{if eq .APP_ENV "production"}}{{.APP_NAME}}{{else}}{{.APP_NAME}}-{{.SHORT_ENV_NAME}}{{end}}'
    GIT_COMMIT:
        desc: "The git commit hash of the current commit."
        sh: git rev-parse --short HEAD
    GIT_TAG:
        desc: "The git tag of the current commit."
        sh: git describe --tags --abbrev=0 2>/dev/null || echo "latest"
    GIT_TAG_COMMIT:
        desc: "The last tagged commit."
        sh: git rev-list --abbrev-commit --tags --max-count=1
    GIT_BUILD:
        desc: "The number of commits since the last tag."
        sh: echo '{{if ne .GIT_COMMIT .GIT_TAG_COMMIT}}-{{.GIT_COMMIT}}{{end}}'
    GIT_DIRTY:
        desc: "Whether the git repository is dirty."
        sh: git diff --quiet || echo "+dirty"
    VERSION:
        desc: "The version of the image."
        sh: echo '{{.GIT_TAG}}{{.GIT_BUILD}}{{.GIT_DIRTY}}'
    BUILD_DATE:
        desc: "The date the image was built."
        sh: git log -1 --format=%cd --date=format:'%Y-%m-%dT%H:%M:%SZ'
    BUILD_FOLDER:
        desc: "The folder where the build is happening. Current folder/build"
        sh: echo "build"
    RELEASE_FOLDER:
        desc: "The folder where the release is happening. Current folder/release"
        sh: echo "dist"


# Import tasks from other files
includes:
    docker: ./.task/docker.taskfile.yml
    go: ./.task/go.taskfile.yml

# Define tasks
tasks:

    info:
        desc: "Display information about the project."
        cmds:
            - echo "{{.APP_NAME}} ({{.VERSION}}) will be running in '{{.APP_ENV}}' mode."
        silent: true
